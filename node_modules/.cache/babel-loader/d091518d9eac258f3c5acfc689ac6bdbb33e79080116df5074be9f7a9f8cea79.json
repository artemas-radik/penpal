{"ast":null,"code":"var _jsxFileName = \"/Users/khoinguyen/Programming/penpal/src/components/Content.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Spinner from \"./Spinner\";\nimport Request from \"./Request\";\nimport FreeWrite from \"./FreeWrite\";\nimport Cookies from \"universal-cookie\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\nconst Content = () => {\n  _s();\n  // auth0 stuff, get name, email address\n  const {\n    user\n  } = useAuth0();\n  const [threads, setThreads] = useState([]);\n  const [selectedThread, setSelectedThread] = useState(\"\");\n\n  // freewrite mode\n  const [freewriteThreads, setFreewriteThreads] = useState([]);\n  const [selectedFreewriteThread, setSelectedFreewriteThread] = useState(\"\");\n\n  // close navbar\n  const [showNav, setShowNav] = useState(true);\n\n  // websocket connection\n  const [socket, setSocket] = useState(null);\n  const [reconnectSocket, setReconnectSocket] = useState(false);\n\n  // show CTA subscribed modal\n\n  // show brainstorm input modal\n  const [showBrainstormModal, setShowBrainstormModal] = useState(false);\n\n  // show new chat modal\n  const [showChatModal, setShowChatModal] = useState(false);\n  useEffect(() => {\n    if (cookies.get(\"token\") === undefined) {\n      console.log(\"Cookies: \", cookies.getAll());\n      setTimeout(() => {}, 1000);\n    }\n\n    // userflow.init(process.env.REACT_APP_USERFLOW_TOKEN)\n    // userflow.identify(user.email, {\n    // \tname: user.name,\n    // \temail: user.email,\n    // \t// set onboarded_brainstorm to false only if the user hasn't had it set before\n    // \tonboarded_brainstorm: { set_once: \"false\" },\n    // \tonboarded_generate: { set_once: \"false\" },\n    // })\n    // cookies.set(\"userflow\", true, { path: \"/\" })\n\n    initData();\n    setSocket(new WebSocket(process.env.REACT_APP_WS_URL + \"ws/essay/\" + \"?token=\" + cookies.get(\"token\")));\n    setReconnectSocket(!reconnectSocket);\n  }, []);\n  useEffect(() => {\n    if (socket === null) return;\n    socket.onopen = e => {\n      console.log(\"Connected to websocket from home\");\n    };\n    socket.onclose = e => {\n      console.log(\"Disconnected from websocket from home because: \", e);\n      setTimeout(() => {\n        setSocket(connectToSocket());\n        setReconnectSocket(!reconnectSocket);\n      }, 1000);\n    };\n    socket.onerror = e => {\n      console.log(\"Error connecting to websocket from home\");\n      socket.close();\n    };\n    return () => {\n      socket.close();\n    };\n  }, [reconnectSocket]);\n  const connectToSocket = () => {\n    const newWS = new WebSocket(process.env.REACT_APP_WS_URL + \"ws/essay/\" + \"?token=\" + cookies.get(\"token\"));\n    return newWS;\n  };\n  const initData = () => {\n    // const threadsRequest = new Request(\"threads/\")\n    // threadsRequest\n    // \t.then((res) => {\n    // \t\tsetThreads(res.data)\n    // \t\tsetSelectedThread(res.data[0].id)\n    // \t})\n    // \t.catch((err) => {\n    // \t\tconsole.log(err)\n    // \t})\n    setTimeout(() => {}, 1000);\n    const freewriteThreadsRequest = new Request(\"freewritethreads/\");\n    freewriteThreadsRequest.then(res => {\n      setFreewriteThreads(res.data);\n      setSelectedFreewriteThread(res.data[0].id);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  if (pauseToLoad === false) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 10\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row from-green-200 to-green-500 bg-gradient-135\",\n    children: /*#__PURE__*/_jsxDEV(FreeWrite, {\n      freewriteThreads: freewriteThreads,\n      setFreewriteThreads: setFreewriteThreads,\n      selectedFreewriteThread: selectedFreewriteThread,\n      setSelectedFreewriteThread: setSelectedFreewriteThread,\n      socket: socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 3\n  }, this);\n};\n_s(Content, \"be1GqVelK1ClaG8/cPhqhqPIhJM=\", false, function () {\n  return [useAuth0];\n});\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","useEffect","useState","Spinner","Request","FreeWrite","Cookies","useAuth0","wait","cookies","Content","user","threads","setThreads","selectedThread","setSelectedThread","freewriteThreads","setFreewriteThreads","selectedFreewriteThread","setSelectedFreewriteThread","showNav","setShowNav","socket","setSocket","reconnectSocket","setReconnectSocket","showBrainstormModal","setShowBrainstormModal","showChatModal","setShowChatModal","get","undefined","console","log","getAll","setTimeout","initData","WebSocket","process","env","REACT_APP_WS_URL","onopen","e","onclose","connectToSocket","onerror","close","newWS","freewriteThreadsRequest","then","res","data","id","catch","err","pauseToLoad"],"sources":["/Users/khoinguyen/Programming/penpal/src/components/Content.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport Spinner from \"./Spinner\"\nimport Request from \"./Request\"\nimport FreeWrite from \"./FreeWrite\"\nimport Cookies from \"universal-cookie\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\nimport { wait } from \"@testing-library/user-event/dist/utils\"\n\nconst cookies = new Cookies()\n\nconst Content = () => {\n\t// auth0 stuff, get name, email address\n\tconst { user } = useAuth0()\n\n\tconst [threads, setThreads] = useState([])\n\tconst [selectedThread, setSelectedThread] = useState(\"\")\n\n\t// freewrite mode\n\tconst [freewriteThreads, setFreewriteThreads] = useState([])\n\tconst [selectedFreewriteThread, setSelectedFreewriteThread] = useState(\"\")\n\n\t// close navbar\n\tconst [showNav, setShowNav] = useState(true)\n\n\t// websocket connection\n\tconst [socket, setSocket] = useState(null)\n\tconst [reconnectSocket, setReconnectSocket] = useState(false)\n\n\t// show CTA subscribed modal\n\n\t// show brainstorm input modal\n\tconst [showBrainstormModal, setShowBrainstormModal] = useState(false)\n\n\t// show new chat modal\n\tconst [showChatModal, setShowChatModal] = useState(false)\n\n\tuseEffect(() => {\n\t\tif (cookies.get(\"token\") === undefined) {\n\t\t\tconsole.log(\"Cookies: \", cookies.getAll())\n\t\t\tsetTimeout(() => {}, 1000)\n\t\t}\n\n\t\t// userflow.init(process.env.REACT_APP_USERFLOW_TOKEN)\n\t\t// userflow.identify(user.email, {\n\t\t// \tname: user.name,\n\t\t// \temail: user.email,\n\t\t// \t// set onboarded_brainstorm to false only if the user hasn't had it set before\n\t\t// \tonboarded_brainstorm: { set_once: \"false\" },\n\t\t// \tonboarded_generate: { set_once: \"false\" },\n\t\t// })\n\t\t// cookies.set(\"userflow\", true, { path: \"/\" })\n\n\t\tinitData()\n\n\t\tsetSocket(\n\t\t\tnew WebSocket(\n\t\t\t\tprocess.env.REACT_APP_WS_URL +\n\t\t\t\t\t\"ws/essay/\" +\n\t\t\t\t\t\"?token=\" +\n\t\t\t\t\tcookies.get(\"token\")\n\t\t\t)\n\t\t)\n\t\tsetReconnectSocket(!reconnectSocket)\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (socket === null) return\n\t\tsocket.onopen = (e) => {\n\t\t\tconsole.log(\"Connected to websocket from home\")\n\t\t}\n\n\t\tsocket.onclose = (e) => {\n\t\t\tconsole.log(\"Disconnected from websocket from home because: \", e)\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetSocket(connectToSocket())\n\t\t\t\tsetReconnectSocket(!reconnectSocket)\n\t\t\t}, 1000)\n\t\t}\n\n\t\tsocket.onerror = (e) => {\n\t\t\tconsole.log(\"Error connecting to websocket from home\")\n\t\t\tsocket.close()\n\t\t}\n\n\t\treturn () => {\n\t\t\tsocket.close()\n\t\t}\n\t}, [reconnectSocket])\n\n\tconst connectToSocket = () => {\n\t\tconst newWS = new WebSocket(\n\t\t\tprocess.env.REACT_APP_WS_URL +\n\t\t\t\t\"ws/essay/\" +\n\t\t\t\t\"?token=\" +\n\t\t\t\tcookies.get(\"token\")\n\t\t)\n\t\treturn newWS\n\t}\n\n\tconst initData = () => {\n\t\t// const threadsRequest = new Request(\"threads/\")\n\t\t// threadsRequest\n\t\t// \t.then((res) => {\n\t\t// \t\tsetThreads(res.data)\n\t\t// \t\tsetSelectedThread(res.data[0].id)\n\t\t// \t})\n\t\t// \t.catch((err) => {\n\t\t// \t\tconsole.log(err)\n\t\t// \t})\n\t\tsetTimeout(() => {}, 1000)\n\n\t\tconst freewriteThreadsRequest = new Request(\"freewritethreads/\")\n\t\tfreewriteThreadsRequest\n\t\t\t.then((res) => {\n\t\t\t\tsetFreewriteThreads(res.data)\n\t\t\t\tsetSelectedFreewriteThread(res.data[0].id)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t})\n\t}\n\n\tif (pauseToLoad === false) {\n\t\treturn <Spinner />\n\t}\n\n\treturn (\n\t\t<div className=\"flex flex-row from-green-200 to-green-500 bg-gradient-135\">\n\t\t\t<FreeWrite\n\t\t\t\tfreewriteThreads={freewriteThreads}\n\t\t\t\tsetFreewriteThreads={setFreewriteThreads}\n\t\t\t\tselectedFreewriteThread={selectedFreewriteThread}\n\t\t\t\tsetSelectedFreewriteThread={setSelectedFreewriteThread}\n\t\t\t\tsocket={socket}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default Content\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}