{"ast":null,"code":"var _jsxFileName = \"/Users/khoinguyen/Programming/delilah-ai/delilah-frontend/src/components/ThreadButton/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"bulma/css/bulma.min.css\";\nimport \"./style.css\";\nimport Request from \"../Request/index.jsx\";\nimport Modal from \"../Modal\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ThreadButton(props) {\n  _s();\n  const [showTextField, setShowTextField] = useState(false);\n  const [textFieldValue, setTextFieldValue] = useState(props.thread.title);\n  const [isConfirmingDelete, setIsConfirmingDelete] = useState(false);\n  const deleteThread = e => {\n    e.preventDefault();\n    setIsConfirmingDelete(false);\n    const threadRequest = new Request(\"threads/\" + props.thread.id + \"/delete/\", {\n      method: \"DELETE\"\n    });\n    threadRequest.then(res => {\n      props.setThreads(props.threads.filter(thread => thread.id !== props.thread.id));\n      props.setSelectedThread(props.threads[0].id);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const handleTextFieldSubmit = e => {\n    e.preventDefault();\n    const threadRequest = new Request(\"threads/\" + props.thread.id + \"/edit/\", {\n      method: \"POST\",\n      data: {\n        title: textFieldValue\n      }\n    });\n    threadRequest.then(res => {\n      props.setThreads(props.threads.map(thread => {\n        if (thread.id === props.thread.id) {\n          thread.title = textFieldValue;\n        }\n        return thread;\n      }));\n      setShowTextField(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const handleSelectThread = e => {\n    if (e.target.id) {\n      props.setSelectedThread(e.target.id);\n    } else if (e.target.parentElement.id) {\n      props.setSelectedThread(e.target.parentElement.id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      open: isConfirmingDelete,\n      setOpen: setIsConfirmingDelete,\n      titleText: \"Delete thread\",\n      bodyText: \"Are you sure you want to delete this thread? You can find your previously deleted threads in the trash.\",\n      confirmButtonAction: deleteThread,\n      confirmButtonText: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread-button \" + (props.selectedThread === props.thread.id ? \"thread-selected\" : \"\"),\n      id: props.thread.id,\n      onClick: handleSelectThread,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), !showTextField ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"thread-title\",\n          id: props.thread.id,\n          children: props.thread.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }, this), props.selectedThread === props.thread.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thread-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-pencil edit-button\",\n            id: props.thread.id,\n            onClick: e => setShowTextField(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }, this), props.threads.length > 1 && /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-trash delete-button\",\n            id: props.thread.id,\n            onClick: e => setIsConfirmingDelete(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread-button\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"thread-rename\",\n          onSubmit: handleTextFieldSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: textFieldValue,\n            onChange: e => setTextFieldValue(e.target.value),\n            autoFocus: true,\n            onFocus: e => {\n              var val = e.target.value;\n              e.target.value = \"\";\n              e.target.value = val;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(ThreadButton, \"LbwnRs2SOooEciQ2mwRh+Dch9gs=\");\n_c = ThreadButton;\nexport default ThreadButton;\nvar _c;\n$RefreshReg$(_c, \"ThreadButton\");","map":{"version":3,"names":["React","useState","Request","Modal","ThreadButton","props","showTextField","setShowTextField","textFieldValue","setTextFieldValue","thread","title","isConfirmingDelete","setIsConfirmingDelete","deleteThread","e","preventDefault","threadRequest","id","method","then","res","setThreads","threads","filter","setSelectedThread","catch","err","console","log","handleTextFieldSubmit","data","map","handleSelectThread","target","parentElement","selectedThread","length","value","val"],"sources":["/Users/khoinguyen/Programming/delilah-ai/delilah-frontend/src/components/ThreadButton/index.jsx"],"sourcesContent":["import React, { useState } from \"react\"\nimport \"bulma/css/bulma.min.css\"\nimport \"./style.css\"\nimport Request from \"../Request/index.jsx\"\nimport Modal from \"../Modal\"\n\nfunction ThreadButton(props) {\n\tconst [showTextField, setShowTextField] = useState(false)\n\tconst [textFieldValue, setTextFieldValue] = useState(props.thread.title)\n\tconst [isConfirmingDelete, setIsConfirmingDelete] = useState(false)\n\n\tconst deleteThread = (e) => {\n\t\te.preventDefault()\n\t\tsetIsConfirmingDelete(false)\n\t\tconst threadRequest = new Request(\n\t\t\t\"threads/\" + props.thread.id + \"/delete/\",\n\t\t\t{\n\t\t\t\tmethod: \"DELETE\",\n\t\t\t}\n\t\t)\n\t\tthreadRequest\n\t\t\t.then((res) => {\n\t\t\t\tprops.setThreads(\n\t\t\t\t\tprops.threads.filter((thread) => thread.id !== props.thread.id)\n\t\t\t\t)\n\t\t\t\tprops.setSelectedThread(props.threads[0].id)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t})\n\t}\n\n\tconst handleTextFieldSubmit = (e) => {\n\t\te.preventDefault()\n\n\t\tconst threadRequest = new Request(\"threads/\" + props.thread.id + \"/edit/\", {\n\t\t\tmethod: \"POST\",\n\t\t\tdata: { title: textFieldValue },\n\t\t})\n\t\tthreadRequest\n\t\t\t.then((res) => {\n\t\t\t\tprops.setThreads(\n\t\t\t\t\tprops.threads.map((thread) => {\n\t\t\t\t\t\tif (thread.id === props.thread.id) {\n\t\t\t\t\t\t\tthread.title = textFieldValue\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn thread\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\tsetShowTextField(false)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t})\n\t}\n\n\tconst handleSelectThread = (e) => {\n\t\tif (e.target.id) {\n\t\t\tprops.setSelectedThread(e.target.id)\n\t\t} else if (e.target.parentElement.id) {\n\t\t\tprops.setSelectedThread(e.target.parentElement.id)\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Modal\n\t\t\t\topen={isConfirmingDelete}\n\t\t\t\tsetOpen={setIsConfirmingDelete}\n\t\t\t\ttitleText={\"Delete thread\"}\n\t\t\t\tbodyText={\n\t\t\t\t\t\"Are you sure you want to delete this thread? You can find your previously deleted threads in the trash.\"\n\t\t\t\t}\n\t\t\t\tconfirmButtonAction={deleteThread}\n\t\t\t\tconfirmButtonText={\"Delete\"}\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tclassName={\n\t\t\t\t\t\"thread-button \" +\n\t\t\t\t\t(props.selectedThread === props.thread.id ? \"thread-selected\" : \"\")\n\t\t\t\t}\n\t\t\t\tid={props.thread.id}\n\t\t\t\tonClick={handleSelectThread}\n\t\t\t>\n\t\t\t\t<i className='fa-solid fa-message'></i>\n\t\t\t\t{!showTextField ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p className='thread-title' id={props.thread.id}>\n\t\t\t\t\t\t\t{props.thread.title}\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t{props.selectedThread === props.thread.id && (\n\t\t\t\t\t\t\t<div className='thread-buttons'>\n\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\tclassName='fa-solid fa-pencil edit-button'\n\t\t\t\t\t\t\t\t\tid={props.thread.id}\n\t\t\t\t\t\t\t\t\tonClick={(e) => setShowTextField(true)}\n\t\t\t\t\t\t\t\t></i>\n\n\t\t\t\t\t\t\t\t{props.threads.length > 1 && (\n\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\tclassName='fa-solid fa-trash delete-button'\n\t\t\t\t\t\t\t\t\t\tid={props.thread.id}\n\t\t\t\t\t\t\t\t\t\tonClick={(e) => setIsConfirmingDelete(true)}\n\t\t\t\t\t\t\t\t\t></i>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<div className='thread-button'>\n\t\t\t\t\t\t<form className='thread-rename' onSubmit={handleTextFieldSubmit}>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tvalue={textFieldValue}\n\t\t\t\t\t\t\t\tonChange={(e) => setTextFieldValue(e.target.value)}\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tonFocus={(e) => {\n\t\t\t\t\t\t\t\t\tvar val = e.target.value\n\t\t\t\t\t\t\t\t\te.target.value = \"\"\n\t\t\t\t\t\t\t\t\te.target.value = val\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default ThreadButton\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,yBAAyB;AAChC,OAAO,aAAa;AACpB,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,UAAU;AAAA;AAAA;AAE5B,SAASC,YAAY,CAACC,KAAK,EAAE;EAAA;EAC5B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAACI,KAAK,CAACK,MAAM,CAACC,KAAK,CAAC;EACxE,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,EAAE;IAClBH,qBAAqB,CAAC,KAAK,CAAC;IAC5B,MAAMI,aAAa,GAAG,IAAIf,OAAO,CAChC,UAAU,GAAGG,KAAK,CAACK,MAAM,CAACQ,EAAE,GAAG,UAAU,EACzC;MACCC,MAAM,EAAE;IACT,CAAC,CACD;IACDF,aAAa,CACXG,IAAI,CAAEC,GAAG,IAAK;MACdhB,KAAK,CAACiB,UAAU,CACfjB,KAAK,CAACkB,OAAO,CAACC,MAAM,CAAEd,MAAM,IAAKA,MAAM,CAACQ,EAAE,KAAKb,KAAK,CAACK,MAAM,CAACQ,EAAE,CAAC,CAC/D;MACDb,KAAK,CAACoB,iBAAiB,CAACpB,KAAK,CAACkB,OAAO,CAAC,CAAC,CAAC,CAACL,EAAE,CAAC;IAC7C,CAAC,CAAC,CACDQ,KAAK,CAAEC,GAAG,IAAK;MACfC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACjB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,qBAAqB,GAAIf,CAAC,IAAK;IACpCA,CAAC,CAACC,cAAc,EAAE;IAElB,MAAMC,aAAa,GAAG,IAAIf,OAAO,CAAC,UAAU,GAAGG,KAAK,CAACK,MAAM,CAACQ,EAAE,GAAG,QAAQ,EAAE;MAC1EC,MAAM,EAAE,MAAM;MACdY,IAAI,EAAE;QAAEpB,KAAK,EAAEH;MAAe;IAC/B,CAAC,CAAC;IACFS,aAAa,CACXG,IAAI,CAAEC,GAAG,IAAK;MACdhB,KAAK,CAACiB,UAAU,CACfjB,KAAK,CAACkB,OAAO,CAACS,GAAG,CAAEtB,MAAM,IAAK;QAC7B,IAAIA,MAAM,CAACQ,EAAE,KAAKb,KAAK,CAACK,MAAM,CAACQ,EAAE,EAAE;UAClCR,MAAM,CAACC,KAAK,GAAGH,cAAc;QAC9B;QACA,OAAOE,MAAM;MACd,CAAC,CAAC,CACF;MACDH,gBAAgB,CAAC,KAAK,CAAC;IACxB,CAAC,CAAC,CACDmB,KAAK,CAAEC,GAAG,IAAK;MACfC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACjB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMM,kBAAkB,GAAIlB,CAAC,IAAK;IACjC,IAAIA,CAAC,CAACmB,MAAM,CAAChB,EAAE,EAAE;MAChBb,KAAK,CAACoB,iBAAiB,CAACV,CAAC,CAACmB,MAAM,CAAChB,EAAE,CAAC;IACrC,CAAC,MAAM,IAAIH,CAAC,CAACmB,MAAM,CAACC,aAAa,CAACjB,EAAE,EAAE;MACrCb,KAAK,CAACoB,iBAAiB,CAACV,CAAC,CAACmB,MAAM,CAACC,aAAa,CAACjB,EAAE,CAAC;IACnD;EACD,CAAC;EAED,oBACC;IAAA,wBACC,QAAC,KAAK;MACL,IAAI,EAAEN,kBAAmB;MACzB,OAAO,EAAEC,qBAAsB;MAC/B,SAAS,EAAE,eAAgB;MAC3B,QAAQ,EACP,yGACA;MACD,mBAAmB,EAAEC,YAAa;MAClC,iBAAiB,EAAE;IAAS;MAAA;MAAA;MAAA;IAAA,QAC3B,eACF;MACC,SAAS,EACR,gBAAgB,IACfT,KAAK,CAAC+B,cAAc,KAAK/B,KAAK,CAACK,MAAM,CAACQ,EAAE,GAAG,iBAAiB,GAAG,EAAE,CAClE;MACD,EAAE,EAAEb,KAAK,CAACK,MAAM,CAACQ,EAAG;MACpB,OAAO,EAAEe,kBAAmB;MAAA,wBAE5B;QAAG,SAAS,EAAC;MAAqB;QAAA;QAAA;QAAA;MAAA,QAAK,EACtC,CAAC3B,aAAa,gBACd;QAAA,wBACC;UAAG,SAAS,EAAC,cAAc;UAAC,EAAE,EAAED,KAAK,CAACK,MAAM,CAACQ,EAAG;UAAA,UAC9Cb,KAAK,CAACK,MAAM,CAACC;QAAK;UAAA;UAAA;UAAA;QAAA,QAChB,EAEHN,KAAK,CAAC+B,cAAc,KAAK/B,KAAK,CAACK,MAAM,CAACQ,EAAE,iBACxC;UAAK,SAAS,EAAC,gBAAgB;UAAA,wBAC9B;YACC,SAAS,EAAC,gCAAgC;YAC1C,EAAE,EAAEb,KAAK,CAACK,MAAM,CAACQ,EAAG;YACpB,OAAO,EAAGH,CAAC,IAAKR,gBAAgB,CAAC,IAAI;UAAE;YAAA;YAAA;YAAA;UAAA,QACnC,EAEJF,KAAK,CAACkB,OAAO,CAACc,MAAM,GAAG,CAAC,iBACxB;YACC,SAAS,EAAC,iCAAiC;YAC3C,EAAE,EAAEhC,KAAK,CAACK,MAAM,CAACQ,EAAG;YACpB,OAAO,EAAGH,CAAC,IAAKF,qBAAqB,CAAC,IAAI;UAAE;YAAA;YAAA;YAAA;UAAA,QAE7C;QAAA;UAAA;UAAA;UAAA;QAAA,QAEF;MAAA,gBACC,gBAEH;QAAK,SAAS,EAAC,eAAe;QAAA,uBAC7B;UAAM,SAAS,EAAC,eAAe;UAAC,QAAQ,EAAEiB,qBAAsB;UAAA,uBAC/D;YACC,IAAI,EAAC,MAAM;YACX,KAAK,EAAEtB,cAAe;YACtB,QAAQ,EAAGO,CAAC,IAAKN,iBAAiB,CAACM,CAAC,CAACmB,MAAM,CAACI,KAAK,CAAE;YACnD,SAAS;YACT,OAAO,EAAGvB,CAAC,IAAK;cACf,IAAIwB,GAAG,GAAGxB,CAAC,CAACmB,MAAM,CAACI,KAAK;cACxBvB,CAAC,CAACmB,MAAM,CAACI,KAAK,GAAG,EAAE;cACnBvB,CAAC,CAACmB,MAAM,CAACI,KAAK,GAAGC,GAAG;YACrB;UAAE;YAAA;YAAA;YAAA;UAAA;QACD;UAAA;UAAA;UAAA;QAAA;MACI;QAAA;QAAA;QAAA;MAAA,QAER;IAAA;MAAA;MAAA;MAAA;IAAA,QACI;EAAA,gBACJ;AAEL;AAAC,GA3HQnC,YAAY;AAAA,KAAZA,YAAY;AA6HrB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}