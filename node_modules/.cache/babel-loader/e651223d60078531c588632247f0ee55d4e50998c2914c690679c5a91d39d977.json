{"ast":null,"code":"var _jsxFileName = \"/Users/khoinguyen/Programming/delilah-ai/delilah-frontend/src/components/Content.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Content.css\";\nimport Left from \"./Left\";\nimport Center from \"./Center\";\nimport Right from \"./Right\";\nimport Spinner from \"./Spinner\";\nimport Request from \"./Request/index.jsx\";\nimport SettingsModal from \"./SettingsModal\";\nimport FreeWrite from \"./FreeWrite\";\nimport Settings from \"./Settings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Content = () => {\n  _s();\n  const [selectedMode, setSelectedMode] = useState(\"chat\");\n\n  // chat mode\n  const [threads, setThreads] = useState([]);\n  const [selectedThread, setSelectedThread] = useState(\"\");\n  const [snippets, setSnippets] = useState([]);\n\n  // freewrite mode\n  const [freewriteThreads, setFreewriteThreads] = useState([]);\n  const [selectedFreewriteThread, setSelectedFreewriteThread] = useState(\"\");\n\n  // user info\n  const [tokensUsed, setTokensUsed] = useState(0);\n  const [userID, setUserID] = useState(\"\");\n  const [subscribed, setSubscribed] = useState(false);\n\n  // close navbar\n  const [showNav, setShowNav] = useState(true);\n\n  // settings modal\n  const [showSettings, setShowSettings] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      initData();\n    }, 1000);\n  }, []);\n  const initData = () => {\n    const meRequest = new Request(\"users/me/\");\n    meRequest.then(res => {\n      setTokensUsed(res.data.tokens_used);\n      setUserID(res.data.user_id);\n      setSubscribed(res.data.subscribed);\n    }).catch(err => {\n      console.log(err);\n    });\n    const threadsRequest = new Request(\"threads/\");\n    threadsRequest.then(res => {\n      setThreads(res.data);\n      setSelectedThread(res.data[0].id);\n    }).catch(err => {\n      console.log(err);\n    });\n    const freewriteThreadsRequest = new Request(\"freewritethreads/\");\n    freewriteThreadsRequest.then(res => {\n      setFreewriteThreads(res.data);\n      setSelectedFreewriteThread(res.data[0].id);\n    }).catch(err => {\n      console.log(err);\n    });\n    const snippetsRequest = new Request(\"snippets/\");\n    snippetsRequest.then(res => {\n      setSnippets(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  if (selectedThread === \"\") {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row bg-[#F8F8F9]\",\n      children: [/*#__PURE__*/_jsxDEV(Left, {\n        showNav: showNav,\n        threads: threads,\n        setThreads: setThreads,\n        selectedThread: selectedThread,\n        setSelectedThread: setSelectedThread,\n        subscribed: subscribed,\n        selectedMode: selectedMode,\n        setSelectedMode: setSelectedMode,\n        freewriteThreads: freewriteThreads,\n        setFreewriteThreads: setFreewriteThreads,\n        selectedFreewriteThread: selectedFreewriteThread,\n        setSelectedFreewriteThread: setSelectedFreewriteThread,\n        setShowSettings: setShowSettings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this), selectedMode === \"chat\" && showSettings === false && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Center, {\n          threads: threads,\n          setThreads: setThreads,\n          selectedThread: selectedThread,\n          setSelectedThread: setSelectedThread,\n          snippets: snippets,\n          setSnippets: setSnippets,\n          tokensUsed: tokensUsed,\n          setTokensUsed: setTokensUsed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Right, {\n          snippets: snippets,\n          setSnippets: setSnippets,\n          tokensUsed: tokensUsed,\n          showSettings: showSettings,\n          setShowSettings: setShowSettings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true), selectedMode === \"freewrite\" && showSettings === false && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(FreeWrite, {\n          freewriteThreads: freewriteThreads,\n          setFreewriteThreads: setFreewriteThreads,\n          selectedFreewriteThread: selectedFreewriteThread,\n          setSelectedFreewriteThread: setSelectedFreewriteThread\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 7\n        }, this)\n      }, void 0, false), showSettings && /*#__PURE__*/_jsxDEV(Settings, {\n        subscribed: subscribed,\n        setSubscribed: setSubscribed,\n        userID: userID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n_s(Content, \"GMPmAk+bJsvRpPZhfsNXYLZ7BLI=\");\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","useEffect","useState","Left","Center","Right","Spinner","Request","SettingsModal","FreeWrite","Settings","Content","selectedMode","setSelectedMode","threads","setThreads","selectedThread","setSelectedThread","snippets","setSnippets","freewriteThreads","setFreewriteThreads","selectedFreewriteThread","setSelectedFreewriteThread","tokensUsed","setTokensUsed","userID","setUserID","subscribed","setSubscribed","showNav","setShowNav","showSettings","setShowSettings","setTimeout","initData","meRequest","then","res","data","tokens_used","user_id","catch","err","console","log","threadsRequest","id","freewriteThreadsRequest","snippetsRequest"],"sources":["/Users/khoinguyen/Programming/delilah-ai/delilah-frontend/src/components/Content.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport \"./Content.css\"\nimport Left from \"./Left\"\nimport Center from \"./Center\"\nimport Right from \"./Right\"\nimport Spinner from \"./Spinner\"\nimport Request from \"./Request/index.jsx\"\nimport SettingsModal from \"./SettingsModal\"\nimport FreeWrite from \"./FreeWrite\"\nimport Settings from \"./Settings\"\n\nconst Content = () => {\n\tconst [selectedMode, setSelectedMode] = useState(\"chat\")\n\n\t// chat mode\n\tconst [threads, setThreads] = useState([])\n\tconst [selectedThread, setSelectedThread] = useState(\"\")\n\tconst [snippets, setSnippets] = useState([])\n\n\t// freewrite mode\n\tconst [freewriteThreads, setFreewriteThreads] = useState([])\n\tconst [selectedFreewriteThread, setSelectedFreewriteThread] = useState(\"\")\n\n\t// user info\n\tconst [tokensUsed, setTokensUsed] = useState(0)\n\tconst [userID, setUserID] = useState(\"\")\n\tconst [subscribed, setSubscribed] = useState(false)\n\n\t// close navbar\n\tconst [showNav, setShowNav] = useState(true)\n\n\t// settings modal\n\tconst [showSettings, setShowSettings] = useState(false)\n\n\tuseEffect(() => {\n\t\tsetTimeout(() => {\n\t\t\tinitData()\n\t\t}, 1000)\n\t}, [])\n\n\tconst initData = () => {\n\t\tconst meRequest = new Request(\"users/me/\")\n\t\tmeRequest\n\t\t\t.then((res) => {\n\t\t\t\tsetTokensUsed(res.data.tokens_used)\n\t\t\t\tsetUserID(res.data.user_id)\n\t\t\t\tsetSubscribed(res.data.subscribed)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t})\n\n\t\tconst threadsRequest = new Request(\"threads/\")\n\t\tthreadsRequest\n\t\t\t.then((res) => {\n\t\t\t\tsetThreads(res.data)\n\t\t\t\tsetSelectedThread(res.data[0].id)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t})\n\n\t\tconst freewriteThreadsRequest = new Request(\"freewritethreads/\")\n\t\tfreewriteThreadsRequest\n\t\t\t.then((res) => {\n\t\t\t\tsetFreewriteThreads(res.data)\n\t\t\t\tsetSelectedFreewriteThread(res.data[0].id)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t})\n\n\t\tconst snippetsRequest = new Request(\"snippets/\")\n\t\tsnippetsRequest\n\t\t\t.then((res) => {\n\t\t\t\tsetSnippets(res.data)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t})\n\t}\n\n\tif (selectedThread === \"\") {\n\t\treturn <Spinner />\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className='flex flex-row bg-[#F8F8F9]'>\n\t\t\t\t<Left\n\t\t\t\t\tshowNav={showNav}\n\t\t\t\t\tthreads={threads}\n\t\t\t\t\tsetThreads={setThreads}\n\t\t\t\t\tselectedThread={selectedThread}\n\t\t\t\t\tsetSelectedThread={setSelectedThread}\n\t\t\t\t\tsubscribed={subscribed}\n\t\t\t\t\tselectedMode={selectedMode}\n\t\t\t\t\tsetSelectedMode={setSelectedMode}\n\t\t\t\t\tfreewriteThreads={freewriteThreads}\n\t\t\t\t\tsetFreewriteThreads={setFreewriteThreads}\n\t\t\t\t\tselectedFreewriteThread={selectedFreewriteThread}\n\t\t\t\t\tsetSelectedFreewriteThread={setSelectedFreewriteThread}\n\t\t\t\t\tsetShowSettings={setShowSettings}\n\t\t\t\t/>\n\n\t\t\t\t{selectedMode === \"chat\" && showSettings === false && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Center\n\t\t\t\t\t\t\tthreads={threads}\n\t\t\t\t\t\t\tsetThreads={setThreads}\n\t\t\t\t\t\t\tselectedThread={selectedThread}\n\t\t\t\t\t\t\tsetSelectedThread={setSelectedThread}\n\t\t\t\t\t\t\tsnippets={snippets}\n\t\t\t\t\t\t\tsetSnippets={setSnippets}\n\t\t\t\t\t\t\ttokensUsed={tokensUsed}\n\t\t\t\t\t\t\tsetTokensUsed={setTokensUsed}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Right\n\t\t\t\t\t\t\tsnippets={snippets}\n\t\t\t\t\t\t\tsetSnippets={setSnippets}\n\t\t\t\t\t\t\ttokensUsed={tokensUsed}\n\t\t\t\t\t\t\tshowSettings={showSettings}\n\t\t\t\t\t\t\tsetShowSettings={setShowSettings}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n\t\t\t\t{selectedMode === \"freewrite\" && showSettings === false && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<FreeWrite\n\t\t\t\t\t\t\tfreewriteThreads={freewriteThreads}\n\t\t\t\t\t\t\tsetFreewriteThreads={setFreewriteThreads}\n\t\t\t\t\t\t\tselectedFreewriteThread={selectedFreewriteThread}\n\t\t\t\t\t\t\tsetSelectedFreewriteThread={setSelectedFreewriteThread}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n\t\t\t\t{showSettings && (\n\t\t\t\t\t<Settings\n\t\t\t\t\t\tsubscribed={subscribed}\n\t\t\t\t\t\tsetSubscribed={setSubscribed}\n\t\t\t\t\t\tuserID={userID}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default Content\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}