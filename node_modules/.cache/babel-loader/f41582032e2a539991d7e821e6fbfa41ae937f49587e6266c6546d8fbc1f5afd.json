{"ast":null,"code":"var _jsxFileName = \"/Users/khoinguyen/Programming/delilah-ai/delilah-frontend/src/components/Left/ThreadsTray/ThreadButton/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Request from \"../../../Request/index.jsx\";\nimport Modal from \"../../../Modal\";\nimport { ReactComponent as ChatIcon } from \"../../../../svg/chat-icon.svg\";\nimport { PencilSquareIcon, TrashIcon, CheckIcon, XMarkIcon } from \"@heroicons/react/24/outline\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreadButton = _ref => {\n  _s();\n  let {\n    thread,\n    threads,\n    setThreads,\n    selectedThread,\n    setSelectedThread\n  } = _ref;\n  const [showTextField, setShowTextField] = useState(false);\n  const [textFieldValue, setTextFieldValue] = useState(thread.title);\n  const [isConfirmingDelete, setIsConfirmingDelete] = useState(false);\n  const deleteThread = e => {\n    e.preventDefault();\n    setIsConfirmingDelete(false);\n    const threadRequest = new Request(\"threads/\" + thread.id + \"/delete/\", {\n      method: \"DELETE\"\n    });\n    threadRequest.then(res => {\n      setThreads(threads.filter(tempThread => tempThread.id !== thread.id));\n      setSelectedThread(threads[0].id);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const handleTextFieldSubmit = e => {\n    e.preventDefault();\n    const threadRequest = new Request(\"threads/\" + thread.id + \"/edit/\", {\n      method: \"POST\",\n      data: {\n        title: textFieldValue\n      }\n    });\n    threadRequest.then(res => {\n      setThreads(threads.map(tempThread => {\n        if (tempThread.id === thread.id) {\n          tempThread.title = textFieldValue;\n        }\n        return tempThread;\n      }));\n      console.log(\"doing this much\");\n      setShowTextField(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const selectedThreadBackgroundClass = () => {\n    return selectedThread === thread.id ? \"bg-[#7E55D7]/20\" : \"\";\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      open: isConfirmingDelete,\n      setOpen: setIsConfirmingDelete,\n      titleText: \"Delete thread\",\n      bodyText: \"Are you sure you want to delete this thread? You can find your previously deleted threads in the trash.\",\n      confirmButtonAction: deleteThread,\n      confirmButtonText: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-center flex flex-row hover:cursor-pointer w-full pl-7 py-3 pr-3 \" + selectedThreadBackgroundClass(),\n      id: thread.id,\n      onClick: () => setSelectedThread(thread.id),\n      children: [/*#__PURE__*/_jsxDEV(ChatIcon, {\n        className: \"w-4 h-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), !showTextField ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"whitespace-nowrap text-md text-left text-ellipsis overflow-hidden ml-3 mr-3 text-white text-opacity-100 grow\",\n          children: thread.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this), selectedThread === thread.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row mr-3\",\n          children: [/*#__PURE__*/_jsxDEV(PencilSquareIcon, {\n            className: \"w-5 h-5 text-white text-opacity-90 mr-1\",\n            onClick: () => setShowTextField(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 9\n          }, this), threads.length > 1 && /*#__PURE__*/_jsxDEV(TrashIcon, {\n            className: \"w-5 h-5 text-white text-opacity-90\",\n            onClick: () => setIsConfirmingDelete(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"flex flex-row w-full text-white\",\n        onSubmit: handleTextFieldSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"grow bg-inherit ml-3\",\n          value: textFieldValue,\n          onChange: e => setTextFieldValue(e.target.value),\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(CheckIcon, {\n          className: \"w-5 h-5 text-white text-opacity-90 ml-2 mr-1\",\n          onClick: e => handleTextFieldSubmit(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(XMarkIcon, {\n          className: \"w-5 h-5 text-white text-opacity-90\",\n          onClick: () => setShowTextField(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_s(ThreadButton, \"NK4WdF08u8JRDb/XPUijvUSlMeI=\");\n_c = ThreadButton;\nexport default ThreadButton;\nvar _c;\n$RefreshReg$(_c, \"ThreadButton\");","map":{"version":3,"names":["React","useState","Request","Modal","ReactComponent","ChatIcon","PencilSquareIcon","TrashIcon","CheckIcon","XMarkIcon","ThreadButton","thread","threads","setThreads","selectedThread","setSelectedThread","showTextField","setShowTextField","textFieldValue","setTextFieldValue","title","isConfirmingDelete","setIsConfirmingDelete","deleteThread","e","preventDefault","threadRequest","id","method","then","res","filter","tempThread","catch","err","console","log","handleTextFieldSubmit","data","map","selectedThreadBackgroundClass","length","target","value"],"sources":["/Users/khoinguyen/Programming/delilah-ai/delilah-frontend/src/components/Left/ThreadsTray/ThreadButton/index.jsx"],"sourcesContent":["import React, { useState } from \"react\"\nimport Request from \"../../../Request/index.jsx\"\nimport Modal from \"../../../Modal\"\nimport { ReactComponent as ChatIcon } from \"../../../../svg/chat-icon.svg\"\nimport {\n\tPencilSquareIcon,\n\tTrashIcon,\n\tCheckIcon,\n\tXMarkIcon,\n} from \"@heroicons/react/24/outline\"\n\nconst ThreadButton = ({\n\tthread,\n\tthreads,\n\tsetThreads,\n\tselectedThread,\n\tsetSelectedThread,\n}) => {\n\tconst [showTextField, setShowTextField] = useState(false)\n\tconst [textFieldValue, setTextFieldValue] = useState(thread.title)\n\tconst [isConfirmingDelete, setIsConfirmingDelete] = useState(false)\n\n\tconst deleteThread = (e) => {\n\t\te.preventDefault()\n\t\tsetIsConfirmingDelete(false)\n\t\tconst threadRequest = new Request(\"threads/\" + thread.id + \"/delete/\", {\n\t\t\tmethod: \"DELETE\",\n\t\t})\n\t\tthreadRequest\n\t\t\t.then((res) => {\n\t\t\t\tsetThreads(threads.filter((tempThread) => tempThread.id !== thread.id))\n\t\t\t\tsetSelectedThread(threads[0].id)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t})\n\t}\n\n\tconst handleTextFieldSubmit = (e) => {\n\t\te.preventDefault()\n\n\t\tconst threadRequest = new Request(\"threads/\" + thread.id + \"/edit/\", {\n\t\t\tmethod: \"POST\",\n\t\t\tdata: { title: textFieldValue },\n\t\t})\n\t\tthreadRequest\n\t\t\t.then((res) => {\n\t\t\t\tsetThreads(\n\t\t\t\t\tthreads.map((tempThread) => {\n\t\t\t\t\t\tif (tempThread.id === thread.id) {\n\t\t\t\t\t\t\ttempThread.title = textFieldValue\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn tempThread\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\tconsole.log(\"doing this much\")\n\t\t\t\tsetShowTextField(false)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t})\n\t}\n\n\tconst selectedThreadBackgroundClass = () => {\n\t\treturn selectedThread === thread.id ? \"bg-[#7E55D7]/20\" : \"\"\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Modal\n\t\t\t\topen={isConfirmingDelete}\n\t\t\t\tsetOpen={setIsConfirmingDelete}\n\t\t\t\ttitleText={\"Delete thread\"}\n\t\t\t\tbodyText={\n\t\t\t\t\t\"Are you sure you want to delete this thread? You can find your previously deleted threads in the trash.\"\n\t\t\t\t}\n\t\t\t\tconfirmButtonAction={deleteThread}\n\t\t\t\tconfirmButtonText={\"Delete\"}\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tclassName={\n\t\t\t\t\t\"items-center flex flex-row hover:cursor-pointer w-full pl-7 py-3 pr-3 \" +\n\t\t\t\t\tselectedThreadBackgroundClass()\n\t\t\t\t}\n\t\t\t\tid={thread.id}\n\t\t\t\tonClick={() => setSelectedThread(thread.id)}\n\t\t\t>\n\t\t\t\t<ChatIcon className='w-4 h-4' />\n\t\t\t\t{!showTextField ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p className='whitespace-nowrap text-md text-left text-ellipsis overflow-hidden ml-3 mr-3 text-white text-opacity-100 grow'>\n\t\t\t\t\t\t\t{thread.title}\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t{selectedThread === thread.id && (\n\t\t\t\t\t\t\t<div className='flex flex-row mr-3'>\n\t\t\t\t\t\t\t\t<PencilSquareIcon\n\t\t\t\t\t\t\t\t\tclassName='w-5 h-5 text-white text-opacity-90 mr-1'\n\t\t\t\t\t\t\t\t\tonClick={() => setShowTextField(true)}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t{threads.length > 1 && (\n\t\t\t\t\t\t\t\t\t<TrashIcon\n\t\t\t\t\t\t\t\t\t\tclassName='w-5 h-5 text-white text-opacity-90'\n\t\t\t\t\t\t\t\t\t\tonClick={() => setIsConfirmingDelete(true)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<form\n\t\t\t\t\t\tclassName='flex flex-row w-full text-white'\n\t\t\t\t\t\tonSubmit={handleTextFieldSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tclassName='grow bg-inherit ml-3'\n\t\t\t\t\t\t\tvalue={textFieldValue}\n\t\t\t\t\t\t\tonChange={(e) => setTextFieldValue(e.target.value)}\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<CheckIcon\n\t\t\t\t\t\t\tclassName='w-5 h-5 text-white text-opacity-90 ml-2 mr-1'\n\t\t\t\t\t\t\tonClick={(e) => handleTextFieldSubmit(e)}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<XMarkIcon\n\t\t\t\t\t\t\tclassName='w-5 h-5 text-white text-opacity-90'\n\t\t\t\t\t\t\tonClick={() => setShowTextField(false)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</form>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default ThreadButton\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}