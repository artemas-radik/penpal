{"ast":null,"code":"var _jsxFileName = \"/Users/khoinguyen/Programming/delilah-ai/delilah-frontend/src/components/Center/index.jsx\",\n  _s2 = $RefreshSig$();\nimport Message from \"./Message\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Request from \"../Request/index.jsx\";\nimport CenterForm from \"../CenterForm\";\nimport EmptyThreadInfo from \"./EmptyThreadInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Center = _ref => {\n  _s2();\n  var _s = $RefreshSig$();\n  let {\n    threads,\n    setThreads,\n    selectedThread,\n    snippets,\n    setSnippets,\n    socket\n  } = _ref;\n  const [delilahWorking, setDelilahWorking] = useState(false);\n  // Prompt Form\n  const choiceTypes = [\"prompt\", \"subject\", \"demographics\"];\n  const [formData, setFormData] = useState({\n    prompt_type: \"brainstorm\",\n    prompt_choices: [{\n      choice_type: choiceTypes[0],\n      choice: \"\",\n      placeholder: \"Enter the prompt here\"\n    }, {\n      choice_type: choiceTypes[1],\n      choice: \"\",\n      placeholder: \"Choose an interesting topic\"\n    }, {\n      choice_type: choiceTypes[2],\n      choice: \"\",\n      placeholder: \"Enter cool information about yourself\"\n    }],\n    thread_id: selectedThread\n  });\n\n  // Update Form / Quicktools\n  const [command, setCommand] = useState(\"general\");\n  const [showTextField, setShowTextField] = useState(true);\n  const [textFieldValue, setTextFieldValue] = useState(\"\");\n  useEffect(() => {\n    if (socket === null) return;\n    socket.onmessage = e => {\n      const data = JSON.parse(e.data);\n      if (data[\"output_text\"]) {\n        setThreads(threads.map(thread => {\n          if (thread.id === selectedThread) {\n            const lastGeneration = thread.generations.slice(-1)[0];\n            lastGeneration.text = lastGeneration.text + data[\"output_text\"];\n          }\n          return thread;\n        }));\n      }\n      if (data[\"prompt\"]) {\n        setThreads(threads.map(thread => {\n          if (thread.id === selectedThread) {\n            return {\n              ...thread,\n              generations: [...thread.generations, data]\n            };\n          }\n          return thread;\n        }));\n      }\n      setFormData({\n        ...formData,\n        prompt_type: \"brainstorm\",\n        prompt_choices: [{\n          choice_type: choiceTypes[0],\n          choice: \"\"\n        }, {\n          choice_type: choiceTypes[1],\n          choice: \"\"\n        }, {\n          choice_type: choiceTypes[2],\n          choice: \"\"\n        }]\n      });\n      if (data[\"status_command\"] === \"DONE\") {\n        setTextFieldValue(\"\");\n      }\n      if (data[\"status\"] === \"DONE\") {\n        setDelilahWorking(false);\n      }\n    };\n    return () => {\n      socket.onmessage = null;\n    };\n  }, [threads, setThreads, selectedThread, delilahWorking]);\n  useEffect(() => {\n    setFormData({\n      ...formData,\n      thread_id: selectedThread\n    });\n  }, [selectedThread]);\n  const handleChangeForm = (event, index) => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newPromptChoices = [...formData.prompt_choices];\n    if (event.target.name === \"prompt_type\") setFormData({\n      ...formData,\n      [event.target.name]: event.target.value\n    });else newPromptChoices[index][name] = value;\n    setFormData({\n      ...formData,\n      prompt_type: name === \"prompt_type\" ? value : formData.prompt_type,\n      prompt_choices: newPromptChoices\n    });\n    console.log(formData);\n  };\n  const sendForm = () => {\n    setDelilahWorking(true);\n    socket.send(JSON.stringify({\n      ...formData,\n      websocket_type: \"generation\"\n    }));\n  };\n  const handleChange = e => {\n    setCommand(e.target.value);\n    setShowTextField(e.target.value !== \"\");\n  };\n  const sendCommands = (e, valCommand, valTextFieldValue) => {\n    e.preventDefault();\n    setDelilahWorking(true);\n    const data = {\n      command: valCommand,\n      text_field_value: valTextFieldValue,\n      thread_id: selectedThread\n    };\n    socket.send(JSON.stringify({\n      ...data,\n      websocket_type: \"command\"\n    }));\n  };\n  const regenerateGeneration = e => {\n    setDelilahWorking(true);\n    setThreads(threads.map(thread => {\n      if (thread.id === selectedThread) {\n        return {\n          ...thread,\n          generations: [...thread.generations.slice(0, thread.generations.length - 1)]\n        };\n      }\n      return thread;\n    }));\n    const toSend = {\n      ...formData,\n      websocket_type: \"regenerate\"\n    };\n    socket.send(JSON.stringify(toSend));\n  };\n  const deleteGeneration = e => {\n    setDelilahWorking(true);\n    const deleteRequest = new Request(\"threads/\" + selectedThread + \"/delete_last_generation/\", {\n      method: \"POST\"\n    });\n    deleteRequest.then(response => {\n      setThreads(threads.map(thread => {\n        if (thread.id === selectedThread) {\n          return response.data;\n        }\n        return thread;\n      }));\n      setDelilahWorking(false);\n    }).catch(err => {\n      console.log(err);\n      setDelilahWorking(false);\n    });\n  };\n  const threadHasNoGenerations = () => {\n    return threads.find(thread => thread.id === selectedThread).generations.length === 0;\n  };\n  const getThreadGenerations = () => {\n    return threads.find(thread => thread.id === selectedThread).generations;\n  };\n  const AlwaysScrollToBottom = () => {\n    _s();\n    const elementRef = useRef();\n    useEffect(() => elementRef.current.scrollIntoView());\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: elementRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 10\n    }, this);\n  };\n  _s(AlwaysScrollToBottom, \"CKe/C9l/PZDcdMrjDfTWxieUegY=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-slate-100 h-full w-4/6 relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-y-scroll overflow-x-hidden h-screen bg-slate-100 relative mx-auto left-0 right-0 w-5/6\",\n      children: threadHasNoGenerations() ? /*#__PURE__*/_jsxDEV(EmptyThreadInfo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [getThreadGenerations().map((generation, index, arr) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Message, {\n              text: generation.prompt.user_string,\n              writtenByDelilah: false,\n              sendCommands: sendCommands,\n              delilahWorking: delilahWorking,\n              setDelilahWorking: setDelilahWorking,\n              snippets: snippets,\n              setSnippets: setSnippets,\n              isLast: index === -1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Message, {\n              text: generation.text,\n              writtenByDelilah: true,\n              sendCommands: sendCommands,\n              delilahWorking: delilahWorking,\n              setDelilahWorking: setDelilahWorking,\n              snippets: snippets,\n              setSnippets: setSnippets,\n              isLast: index === arr.length - 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 10\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 9\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(AlwaysScrollToBottom, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CenterForm, {\n      threads: threads,\n      selectedThread: selectedThread,\n      formData: formData,\n      handleChangeForm: handleChangeForm,\n      command: command,\n      sendForm: sendForm,\n      handleChange: handleChange,\n      showTextField: showTextField,\n      textFieldValue: textFieldValue,\n      setTextFieldValue: setTextFieldValue,\n      sendCommands: sendCommands,\n      deleteGeneration: deleteGeneration,\n      regenerateGeneration: regenerateGeneration,\n      delilahWorking: delilahWorking\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 3\n  }, this);\n};\n_s2(Center, \"0aJUPlBGNNOcsmVC/OyfGVqPYhE=\");\n_c = Center;\nexport default Center;\nvar _c;\n$RefreshReg$(_c, \"Center\");","map":{"version":3,"names":["Message","React","useState","useEffect","useRef","Request","CenterForm","EmptyThreadInfo","Center","threads","setThreads","selectedThread","snippets","setSnippets","socket","delilahWorking","setDelilahWorking","choiceTypes","formData","setFormData","prompt_type","prompt_choices","choice_type","choice","placeholder","thread_id","command","setCommand","showTextField","setShowTextField","textFieldValue","setTextFieldValue","onmessage","e","data","JSON","parse","map","thread","id","lastGeneration","generations","slice","text","handleChangeForm","event","index","name","value","target","newPromptChoices","console","log","sendForm","send","stringify","websocket_type","handleChange","sendCommands","valCommand","valTextFieldValue","preventDefault","text_field_value","regenerateGeneration","length","toSend","deleteGeneration","deleteRequest","method","then","response","catch","err","threadHasNoGenerations","find","getThreadGenerations","AlwaysScrollToBottom","elementRef","current","scrollIntoView","generation","arr","prompt","user_string"],"sources":["/Users/khoinguyen/Programming/delilah-ai/delilah-frontend/src/components/Center/index.jsx"],"sourcesContent":["import Message from \"./Message\"\nimport React, { useState, useEffect, useRef } from \"react\"\nimport Request from \"../Request/index.jsx\"\nimport CenterForm from \"../CenterForm\"\nimport EmptyThreadInfo from \"./EmptyThreadInfo\"\n\nconst Center = ({\n\tthreads,\n\tsetThreads,\n\tselectedThread,\n\tsnippets,\n\tsetSnippets,\n\tsocket,\n}) => {\n\tconst [delilahWorking, setDelilahWorking] = useState(false)\n\t// Prompt Form\n\tconst choiceTypes = [\"prompt\", \"subject\", \"demographics\"]\n\tconst [formData, setFormData] = useState({\n\t\tprompt_type: \"brainstorm\",\n\t\tprompt_choices: [\n\t\t\t{\n\t\t\t\tchoice_type: choiceTypes[0],\n\t\t\t\tchoice: \"\",\n\t\t\t\tplaceholder: \"Enter the prompt here\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchoice_type: choiceTypes[1],\n\t\t\t\tchoice: \"\",\n\t\t\t\tplaceholder: \"Choose an interesting topic\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchoice_type: choiceTypes[2],\n\t\t\t\tchoice: \"\",\n\t\t\t\tplaceholder: \"Enter cool information about yourself\",\n\t\t\t},\n\t\t],\n\t\tthread_id: selectedThread,\n\t})\n\n\t// Update Form / Quicktools\n\tconst [command, setCommand] = useState(\"general\")\n\tconst [showTextField, setShowTextField] = useState(true)\n\tconst [textFieldValue, setTextFieldValue] = useState(\"\")\n\n\tuseEffect(() => {\n\t\tif (socket === null) return\n\n\t\tsocket.onmessage = (e) => {\n\t\t\tconst data = JSON.parse(e.data)\n\t\t\tif (data[\"output_text\"]) {\n\t\t\t\tsetThreads(\n\t\t\t\t\tthreads.map((thread) => {\n\t\t\t\t\t\tif (thread.id === selectedThread) {\n\t\t\t\t\t\t\tconst lastGeneration = thread.generations.slice(-1)[0]\n\t\t\t\t\t\t\tlastGeneration.text = lastGeneration.text + data[\"output_text\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn thread\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t}\n\t\t\tif (data[\"prompt\"]) {\n\t\t\t\tsetThreads(\n\t\t\t\t\tthreads.map((thread) => {\n\t\t\t\t\t\tif (thread.id === selectedThread) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...thread,\n\t\t\t\t\t\t\t\tgenerations: [...thread.generations, data],\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn thread\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t}\n\t\t\tsetFormData({\n\t\t\t\t...formData,\n\t\t\t\tprompt_type: \"brainstorm\",\n\t\t\t\tprompt_choices: [\n\t\t\t\t\t{ choice_type: choiceTypes[0], choice: \"\" },\n\t\t\t\t\t{ choice_type: choiceTypes[1], choice: \"\" },\n\t\t\t\t\t{ choice_type: choiceTypes[2], choice: \"\" },\n\t\t\t\t],\n\t\t\t})\n\t\t\tif (data[\"status_command\"] === \"DONE\") {\n\t\t\t\tsetTextFieldValue(\"\")\n\t\t\t}\n\n\t\t\tif (data[\"status\"] === \"DONE\") {\n\t\t\t\tsetDelilahWorking(false)\n\t\t\t}\n\t\t}\n\n\t\treturn () => {\n\t\t\tsocket.onmessage = null\n\t\t}\n\t}, [threads, setThreads, selectedThread, delilahWorking])\n\n\tuseEffect(() => {\n\t\tsetFormData({\n\t\t\t...formData,\n\t\t\tthread_id: selectedThread,\n\t\t})\n\t}, [selectedThread])\n\n\tconst handleChangeForm = (event, index) => {\n\t\tconst { name, value } = event.target\n\t\tconst newPromptChoices = [...formData.prompt_choices]\n\n\t\tif (event.target.name === \"prompt_type\")\n\t\t\tsetFormData({\n\t\t\t\t...formData,\n\t\t\t\t[event.target.name]: event.target.value,\n\t\t\t})\n\t\telse newPromptChoices[index][name] = value\n\t\tsetFormData({\n\t\t\t...formData,\n\t\t\tprompt_type: name === \"prompt_type\" ? value : formData.prompt_type,\n\t\t\tprompt_choices: newPromptChoices,\n\t\t})\n\n\t\tconsole.log(formData)\n\t}\n\n\tconst sendForm = () => {\n\t\tsetDelilahWorking(true)\n\t\tsocket.send(JSON.stringify({ ...formData, websocket_type: \"generation\" }))\n\t}\n\n\tconst handleChange = (e) => {\n\t\tsetCommand(e.target.value)\n\t\tsetShowTextField(e.target.value !== \"\")\n\t}\n\n\tconst sendCommands = (e, valCommand, valTextFieldValue) => {\n\t\te.preventDefault()\n\t\tsetDelilahWorking(true)\n\n\t\tconst data = {\n\t\t\tcommand: valCommand,\n\t\t\ttext_field_value: valTextFieldValue,\n\t\t\tthread_id: selectedThread,\n\t\t}\n\t\tsocket.send(JSON.stringify({ ...data, websocket_type: \"command\" }))\n\t}\n\n\tconst regenerateGeneration = (e) => {\n\t\tsetDelilahWorking(true)\n\t\tsetThreads(\n\t\t\tthreads.map((thread) => {\n\t\t\t\tif (thread.id === selectedThread) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...thread,\n\t\t\t\t\t\tgenerations: [\n\t\t\t\t\t\t\t...thread.generations.slice(0, thread.generations.length - 1),\n\t\t\t\t\t\t],\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn thread\n\t\t\t})\n\t\t)\n\n\t\tconst toSend = { ...formData, websocket_type: \"regenerate\" }\n\t\tsocket.send(JSON.stringify(toSend))\n\t}\n\n\tconst deleteGeneration = (e) => {\n\t\tsetDelilahWorking(true)\n\n\t\tconst deleteRequest = new Request(\n\t\t\t\"threads/\" + selectedThread + \"/delete_last_generation/\",\n\t\t\t{\n\t\t\t\tmethod: \"POST\",\n\t\t\t}\n\t\t)\n\n\t\tdeleteRequest\n\t\t\t.then((response) => {\n\t\t\t\tsetThreads(\n\t\t\t\t\tthreads.map((thread) => {\n\t\t\t\t\t\tif (thread.id === selectedThread) {\n\t\t\t\t\t\t\treturn response.data\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn thread\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\tsetDelilahWorking(false)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t\tsetDelilahWorking(false)\n\t\t\t})\n\t}\n\n\tconst threadHasNoGenerations = () => {\n\t\treturn (\n\t\t\tthreads.find((thread) => thread.id === selectedThread).generations\n\t\t\t\t.length === 0\n\t\t)\n\t}\n\n\tconst getThreadGenerations = () => {\n\t\treturn threads.find((thread) => thread.id === selectedThread).generations\n\t}\n\n\tconst AlwaysScrollToBottom = () => {\n\t\tconst elementRef = useRef()\n\t\tuseEffect(() => elementRef.current.scrollIntoView())\n\t\treturn <div ref={elementRef} />\n\t}\n\n\treturn (\n\t\t<div className='bg-slate-100 h-full w-4/6 relative'>\n\t\t\t<div className='overflow-y-scroll overflow-x-hidden h-screen bg-slate-100 relative mx-auto left-0 right-0 w-5/6'>\n\t\t\t\t{threadHasNoGenerations() ? (\n\t\t\t\t\t<EmptyThreadInfo />\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{getThreadGenerations().map((generation, index, arr) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={index}>\n\t\t\t\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\t\t\t\ttext={generation.prompt.user_string}\n\t\t\t\t\t\t\t\t\t\twrittenByDelilah={false}\n\t\t\t\t\t\t\t\t\t\tsendCommands={sendCommands}\n\t\t\t\t\t\t\t\t\t\tdelilahWorking={delilahWorking}\n\t\t\t\t\t\t\t\t\t\tsetDelilahWorking={setDelilahWorking}\n\t\t\t\t\t\t\t\t\t\tsnippets={snippets}\n\t\t\t\t\t\t\t\t\t\tsetSnippets={setSnippets}\n\t\t\t\t\t\t\t\t\t\tisLast={index === -1}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\t\t\t\ttext={generation.text}\n\t\t\t\t\t\t\t\t\t\twrittenByDelilah={true}\n\t\t\t\t\t\t\t\t\t\tsendCommands={sendCommands}\n\t\t\t\t\t\t\t\t\t\tdelilahWorking={delilahWorking}\n\t\t\t\t\t\t\t\t\t\tsetDelilahWorking={setDelilahWorking}\n\t\t\t\t\t\t\t\t\t\tsnippets={snippets}\n\t\t\t\t\t\t\t\t\t\tsetSnippets={setSnippets}\n\t\t\t\t\t\t\t\t\t\tisLast={index === arr.length - 1}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t<AlwaysScrollToBottom />\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<CenterForm\n\t\t\t\tthreads={threads}\n\t\t\t\tselectedThread={selectedThread}\n\t\t\t\tformData={formData}\n\t\t\t\thandleChangeForm={handleChangeForm}\n\t\t\t\tcommand={command}\n\t\t\t\tsendForm={sendForm}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\tshowTextField={showTextField}\n\t\t\t\ttextFieldValue={textFieldValue}\n\t\t\t\tsetTextFieldValue={setTextFieldValue}\n\t\t\t\tsendCommands={sendCommands}\n\t\t\t\tdeleteGeneration={deleteGeneration}\n\t\t\t\tregenerateGeneration={regenerateGeneration}\n\t\t\t\tdelilahWorking={delilahWorking}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default Center\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}