{"ast":null,"code":"var _jsxFileName = \"/Users/khoinguyen/Programming/delilah-ai/delilah-frontend/src/components/FreeWrite/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport Request from \"../Request\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FreeWrite = _ref => {\n  _s();\n  let {\n    freewriteThreads,\n    setFreewriteThreads,\n    selectedFreewriteThread\n  } = _ref;\n  const [text, setText] = useState(freewriteThreads.find(freewriteThread => freewriteThread.id === selectedFreewriteThread).text);\n  useEffect(() => {\n    setText(freewriteThreads.find(freewriteThread => freewriteThread.id === selectedFreewriteThread).text);\n  }, [selectedFreewriteThread]);\n  useEffect(() => {\n    const parameters = {\n      data: {\n        text: text\n      },\n      method: \"POST\"\n    };\n    const updateTextRequest = new Request(\"freewritethreads/\" + selectedFreewriteThread + \"/settext/\", parameters);\n    updateTextRequest.then(res => {\n      const newFreewriteThreads = freewriteThreads.map(freewriteThread => {\n        if (freewriteThread.id === selectedFreewriteThread) {\n          freewriteThread.text = text;\n        }\n        return freewriteThread;\n      });\n      setFreewriteThreads(newFreewriteThreads);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [text]);\n  const modules = {\n    toolbar: [[{\n      header: [1, 2, false]\n    }], [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"], [{\n      list: \"ordered\"\n    }, {\n      list: \"bullet\"\n    }, {\n      indent: \"-1\"\n    }, {\n      indent: \"+1\"\n    }], [\"link\", \"image\"]]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n      className: \"freewrite\",\n      theme: \"snow\",\n      value: text,\n      onChange: setText,\n      modules: modules\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }, this);\n};\n_s(FreeWrite, \"X+6uLdU3ZAZ4gYsiuIAQh3HJG6U=\");\n_c = FreeWrite;\nexport default FreeWrite;\nvar _c;\n$RefreshReg$(_c, \"FreeWrite\");","map":{"version":3,"names":["React","useState","useEffect","ReactQuill","Request","FreeWrite","freewriteThreads","setFreewriteThreads","selectedFreewriteThread","text","setText","find","freewriteThread","id","parameters","data","method","updateTextRequest","then","res","newFreewriteThreads","map","catch","err","console","log","modules","toolbar","header","list","indent"],"sources":["/Users/khoinguyen/Programming/delilah-ai/delilah-frontend/src/components/FreeWrite/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport ReactQuill from \"react-quill\"\nimport \"react-quill/dist/quill.snow.css\"\nimport Request from \"../Request\"\n\nconst FreeWrite = ({\n\tfreewriteThreads,\n\tsetFreewriteThreads,\n\tselectedFreewriteThread,\n}) => {\n\tconst [text, setText] = useState(\n\t\tfreewriteThreads.find(\n\t\t\t(freewriteThread) => freewriteThread.id === selectedFreewriteThread\n\t\t).text\n\t)\n\n\tuseEffect(() => {\n\t\tsetText(\n\t\t\tfreewriteThreads.find(\n\t\t\t\t(freewriteThread) => freewriteThread.id === selectedFreewriteThread\n\t\t\t).text\n\t\t)\n\t}, [selectedFreewriteThread])\n\n\tuseEffect(() => {\n\t\tconst parameters = {\n\t\t\tdata: {\n\t\t\t\ttext: text,\n\t\t\t},\n\t\t\tmethod: \"POST\",\n\t\t}\n\t\tconst updateTextRequest = new Request(\n\t\t\t\"freewritethreads/\" + selectedFreewriteThread + \"/settext/\",\n\t\t\tparameters\n\t\t)\n\n\t\tupdateTextRequest\n\t\t\t.then((res) => {\n\t\t\t\tconst newFreewriteThreads = freewriteThreads.map((freewriteThread) => {\n\t\t\t\t\tif (freewriteThread.id === selectedFreewriteThread) {\n\t\t\t\t\t\tfreewriteThread.text = text\n\t\t\t\t\t}\n\t\t\t\t\treturn freewriteThread\n\t\t\t\t})\n\t\t\t\tsetFreewriteThreads(newFreewriteThreads)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t})\n\t}, [text])\n\n\tconst modules = {\n\t\ttoolbar: [\n\t\t\t[{ header: [1, 2, false] }],\n\t\t\t[\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n\t\t\t[\n\t\t\t\t{ list: \"ordered\" },\n\t\t\t\t{ list: \"bullet\" },\n\t\t\t\t{ indent: \"-1\" },\n\t\t\t\t{ indent: \"+1\" },\n\t\t\t],\n\t\t\t[\"link\", \"image\"],\n\t\t],\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<ReactQuill\n\t\t\t\tclassName='freewrite'\n\t\t\t\ttheme='snow'\n\t\t\t\tvalue={text}\n\t\t\t\tonChange={setText}\n\t\t\t\tmodules={modules}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default FreeWrite\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAO,iCAAiC;AACxC,OAAOC,OAAO,MAAM,YAAY;AAAA;AAEhC,MAAMC,SAAS,GAAG,QAIZ;EAAA;EAAA,IAJa;IAClBC,gBAAgB;IAChBC,mBAAmB;IACnBC;EACD,CAAC;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAC/BK,gBAAgB,CAACK,IAAI,CACnBC,eAAe,IAAKA,eAAe,CAACC,EAAE,KAAKL,uBAAuB,CACnE,CAACC,IAAI,CACN;EAEDP,SAAS,CAAC,MAAM;IACfQ,OAAO,CACNJ,gBAAgB,CAACK,IAAI,CACnBC,eAAe,IAAKA,eAAe,CAACC,EAAE,KAAKL,uBAAuB,CACnE,CAACC,IAAI,CACN;EACF,CAAC,EAAE,CAACD,uBAAuB,CAAC,CAAC;EAE7BN,SAAS,CAAC,MAAM;IACf,MAAMY,UAAU,GAAG;MAClBC,IAAI,EAAE;QACLN,IAAI,EAAEA;MACP,CAAC;MACDO,MAAM,EAAE;IACT,CAAC;IACD,MAAMC,iBAAiB,GAAG,IAAIb,OAAO,CACpC,mBAAmB,GAAGI,uBAAuB,GAAG,WAAW,EAC3DM,UAAU,CACV;IAEDG,iBAAiB,CACfC,IAAI,CAAEC,GAAG,IAAK;MACd,MAAMC,mBAAmB,GAAGd,gBAAgB,CAACe,GAAG,CAAET,eAAe,IAAK;QACrE,IAAIA,eAAe,CAACC,EAAE,KAAKL,uBAAuB,EAAE;UACnDI,eAAe,CAACH,IAAI,GAAGA,IAAI;QAC5B;QACA,OAAOG,eAAe;MACvB,CAAC,CAAC;MACFL,mBAAmB,CAACa,mBAAmB,CAAC;IACzC,CAAC,CAAC,CACDE,KAAK,CAAEC,GAAG,IAAK;MACfC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACjB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACd,IAAI,CAAC,CAAC;EAEV,MAAMiB,OAAO,GAAG;IACfC,OAAO,EAAE,CACR,CAAC;MAAEC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK;IAAE,CAAC,CAAC,EAC3B,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,CAAC,EACvD,CACC;MAAEC,IAAI,EAAE;IAAU,CAAC,EACnB;MAAEA,IAAI,EAAE;IAAS,CAAC,EAClB;MAAEC,MAAM,EAAE;IAAK,CAAC,EAChB;MAAEA,MAAM,EAAE;IAAK,CAAC,CAChB,EACD,CAAC,MAAM,EAAE,OAAO,CAAC;EAEnB,CAAC;EAED,oBACC;IAAA,uBACC,QAAC,UAAU;MACV,SAAS,EAAC,WAAW;MACrB,KAAK,EAAC,MAAM;MACZ,KAAK,EAAErB,IAAK;MACZ,QAAQ,EAAEC,OAAQ;MAClB,OAAO,EAAEgB;IAAQ;MAAA;MAAA;MAAA;IAAA;EAChB;IAAA;IAAA;IAAA;EAAA,QACG;AAER,CAAC;AAAA,GAvEKrB,SAAS;AAAA,KAATA,SAAS;AAyEf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}