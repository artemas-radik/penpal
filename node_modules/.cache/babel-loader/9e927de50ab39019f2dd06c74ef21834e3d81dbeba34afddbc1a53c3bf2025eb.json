{"ast":null,"code":"var _jsxFileName = \"/Users/khoinguyen/Programming/delilah-ai/delilah-frontend/src/components/Center/index.jsx\",\n  _s = $RefreshSig$();\nimport Message from \"../Message\";\nimport React, { useState, useEffect } from \"react\";\nimport Request from \"../Request/index.jsx\";\nimport CenterForm from \"../CenterForm\";\nimport EmptyThreadInfoBox from \"../EmptyThreadInfoBox\";\nimport ChatBubbles from \"../../svg/chat-bubbles.svg\";\nimport LightningBolt from \"../../svg/lightning-bolt.svg\";\nimport Warning from \"../../svg/warning.svg\";\nimport Cookies from \"universal-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\nconst websocket = new WebSocket(process.env.REACT_APP_WS_URL + \"ws/essay/?token=\" + cookies.get(\"token\"));\nconst Center = _ref => {\n  _s();\n  let {\n    threads,\n    setThreads,\n    selectedThread,\n    setSelectedThread,\n    snippets,\n    setSnippets,\n    tokensUsed,\n    setTokensUsed\n  } = _ref;\n  const [delilahWorking, setDelilahWorking] = useState(false);\n  useEffect(() => {\n    setFormData({\n      ...formData,\n      thread_id: selectedThread\n    });\n  }, [selectedThread]);\n\n  // Prompt Form\n  const choiceTypes = [\"prompt\", \"subject\", \"demographics\"];\n  const [formData, setFormData] = useState({\n    prompt_type: \"brainstorm\",\n    prompt_choices: [{\n      choice_type: choiceTypes[0],\n      choice: \"\"\n    }, {\n      choice_type: choiceTypes[1],\n      choice: \"\"\n    }, {\n      choice_type: choiceTypes[2],\n      choice: \"\"\n    }],\n    thread_id: selectedThread\n  });\n  const handleChangeForm = (event, index) => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newPromptChoices = [...formData.prompt_choices];\n    if (event.target.name === \"prompt_type\") setFormData({\n      ...formData,\n      [event.target.name]: event.target.value\n    });else newPromptChoices[index][name] = value;\n    setFormData({\n      ...formData,\n      prompt_type: name === \"prompt_type\" ? value : formData.prompt_type,\n      prompt_choices: newPromptChoices\n    });\n  };\n  const sendForm = () => {\n    setDelilahWorking(true);\n    const parameters = {\n      data: formData,\n      method: \"POST\"\n    };\n    const generationsRequest = new Request(\"generations/\", parameters);\n    generationsRequest.then(res => {\n      setTokensUsed(tokensUsed + res.data.tokens_used);\n      setThreads(threads.map(thread => {\n        if (thread.id === selectedThread) {\n          return {\n            ...thread,\n            generations: [...thread.generations, res.data]\n          };\n        }\n        return thread;\n      }));\n      setFormData({\n        ...formData,\n        prompt_type: \"brainstorm\",\n        prompt_choices: [{\n          choice_type: choiceTypes[0],\n          choice: \"\"\n        }, {\n          choice_type: choiceTypes[1],\n          choice: \"\"\n        }]\n      });\n      setDelilahWorking(false);\n    }).catch(err => {\n      console.log(err);\n      setDelilahWorking(false);\n    });\n  };\n\n  // Update Form / Quicktools\n  const [command, setCommand] = useState(\"general\");\n  const [showTextField, setShowTextField] = useState(true);\n  const [textFieldValue, setTextFieldValue] = useState(\"\");\n  const handleChange = e => {\n    setCommand(e.target.value);\n    setShowTextField(e.target.value !== \"\");\n  };\n  const sendCommands = (e, valCommand, valTextFieldValue) => {\n    e.preventDefault();\n    console.log(valCommand, valTextFieldValue);\n    setDelilahWorking(true);\n    const parameters = {\n      data: {\n        command: valCommand,\n        text_field_value: valTextFieldValue,\n        thread_id: selectedThread\n      },\n      method: \"POST\"\n    };\n    const commandsRequest = new Request(\"generations/\", parameters);\n    commandsRequest.then(res => {\n      setTokensUsed(tokensUsed + res.data.tokens_used);\n      setThreads(threads.map(thread => {\n        if (thread.id === selectedThread) {\n          return {\n            ...thread,\n            generations: [...thread.generations, res.data]\n          };\n        }\n        return thread;\n      }));\n      setCommand(\"general\");\n      setTextFieldValue(\"\");\n      setDelilahWorking(false);\n    }).catch(err => {\n      console.log(err);\n      setDelilahWorking(false);\n    });\n  };\n\n  // delete the most recent generation from the thread\n  const deleteGeneration = e => {\n    setDelilahWorking(true);\n    const commandsRequest = new Request(\"threads/\" + selectedThread + \"/delete_last_generation/\", {\n      method: \"POST\"\n    });\n    commandsRequest.then(response => {\n      setThreads(threads.map(thread => {\n        if (thread.id === selectedThread) {\n          return {\n            ...thread,\n            generations: thread.generations.slice(0, thread.generations.length - 1)\n          };\n        }\n        return thread;\n      }));\n      setDelilahWorking(false);\n    }).catch(err => {\n      console.log(err);\n      setDelilahWorking(false);\n    });\n  };\n\n  // regenerate the last geneartion\n  const regenerateGeneration = e => {\n    setDelilahWorking(true);\n    const commandsRequest = new Request(\"threads/\" + selectedThread + \"/regenerate/\", {\n      method: \"POST\"\n    });\n    commandsRequest.then(response => {\n      setThreads(threads.map(thread => {\n        if (thread.id === selectedThread) {\n          return {\n            ...thread,\n            generations: [...thread.generations.slice(0, thread.generations.length - 1), response.data]\n          };\n        }\n        return thread;\n      }));\n      setDelilahWorking(false);\n    }).catch(err => {\n      console.log(err);\n      setDelilahWorking(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col bg-slate-100 hw-screen w-4/6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-y-scroll overflow-x-hidden h-screen bg-slate-100\",\n      children: threads.find(thread => thread.id === selectedThread).generations.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center h-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full md:max-w-2xl lg:max-w-3xl md:h-full md:flex md:flex-col px-6 dark:text-gray-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-4xl font-semibold text-center mt-6 sm:mt-[20vh] ml-auto mr-auto mb-10 sm:mb-16 flex gap-2 items-center justify-center\",\n            children: \"Delilah\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"md:flex items-start text-center gap-3.5\",\n            children: [/*#__PURE__*/_jsxDEV(EmptyThreadInfoBox, {\n              icon: ChatBubbles,\n              title: \"Examples\",\n              text1: \"Someone who grew up in mom's restaurant.\",\n              text2: \"Someone who grew up in a rural town in the middle of nowhere.\",\n              text3: \"Someone who grew up in a crime-ridden city.\",\n              clickable: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(EmptyThreadInfoBox, {\n              icon: LightningBolt,\n              title: \"Capabilities\",\n              text1: \"Optimized for crafting personal anecdotes showing the user's personality\",\n              text2: \"Allows user to provide follow-up correction\",\n              text3: \"Remembers what the user said earlier in the conversation.\",\n              clickable: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(EmptyThreadInfoBox, {\n              icon: Warning,\n              title: \"Limitations\",\n              text1: \"Requires you to input specific and personal experiences\",\n              text2: \"Limited knowledge of the world and events after 2021\",\n              text3: \"May occasionally produce harmful instructions or biased content\",\n              clickable: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: el => {\n              if (el) {\n                el.scrollIntoView(false);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [threads.find(thread => thread.id === selectedThread).generations.map((generation, index, arr) => {\n          const isLast = index === arr.length - 1;\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Message, {\n              text: generation.prompt.user_string,\n              author: \"You\",\n              sendCommands: sendCommands,\n              delilahWorking: delilahWorking,\n              setDelilahWorking: setDelilahWorking,\n              snippets: snippets,\n              setSnippets: setSnippets,\n              isLast: isLast\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Message, {\n              text: generation.text,\n              author: \"Delilah\",\n              sendCommands: sendCommands,\n              delilahWorking: delilahWorking,\n              setDelilahWorking: setDelilahWorking,\n              snippets: snippets,\n              setSnippets: setSnippets,\n              isLast: isLast\n            }, index + 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: el => {\n            if (el) {\n              el.scrollIntoView(false);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CenterForm, {\n      threads: threads,\n      selectedThread: selectedThread,\n      formData: formData,\n      handleChangeForm: handleChangeForm,\n      command: command,\n      sendForm: sendForm,\n      handleChange: handleChange,\n      showTextField: showTextField,\n      textFieldValue: textFieldValue,\n      setTextFieldValue: setTextFieldValue,\n      sendCommands: sendCommands,\n      deleteGeneration: deleteGeneration,\n      regenerateGeneration: regenerateGeneration,\n      delilahWorking: delilahWorking\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 3\n  }, this);\n};\n_s(Center, \"HJTZw04c5cbZZgkyEhx9bX9b1wk=\");\n_c = Center;\nexport default Center;\nvar _c;\n$RefreshReg$(_c, \"Center\");","map":{"version":3,"names":["Message","React","useState","useEffect","Request","CenterForm","EmptyThreadInfoBox","ChatBubbles","LightningBolt","Warning","Cookies","cookies","websocket","WebSocket","process","env","REACT_APP_WS_URL","get","Center","threads","setThreads","selectedThread","setSelectedThread","snippets","setSnippets","tokensUsed","setTokensUsed","delilahWorking","setDelilahWorking","setFormData","formData","thread_id","choiceTypes","prompt_type","prompt_choices","choice_type","choice","handleChangeForm","event","index","name","value","target","newPromptChoices","sendForm","parameters","data","method","generationsRequest","then","res","tokens_used","map","thread","id","generations","catch","err","console","log","command","setCommand","showTextField","setShowTextField","textFieldValue","setTextFieldValue","handleChange","e","sendCommands","valCommand","valTextFieldValue","preventDefault","text_field_value","commandsRequest","deleteGeneration","response","slice","length","regenerateGeneration","find","el","scrollIntoView","generation","arr","isLast","prompt","user_string","text"],"sources":["/Users/khoinguyen/Programming/delilah-ai/delilah-frontend/src/components/Center/index.jsx"],"sourcesContent":["import Message from \"../Message\"\nimport React, { useState, useEffect } from \"react\"\nimport Request from \"../Request/index.jsx\"\nimport CenterForm from \"../CenterForm\"\nimport EmptyThreadInfoBox from \"../EmptyThreadInfoBox\"\nimport ChatBubbles from \"../../svg/chat-bubbles.svg\"\nimport LightningBolt from \"../../svg/lightning-bolt.svg\"\nimport Warning from \"../../svg/warning.svg\"\n\nimport Cookies from \"universal-cookie\"\n\nconst cookies = new Cookies()\nconst websocket = new WebSocket(\n\tprocess.env.REACT_APP_WS_URL + \"ws/essay/?token=\" + cookies.get(\"token\")\n)\n\nconst Center = ({\n\tthreads,\n\tsetThreads,\n\tselectedThread,\n\tsetSelectedThread,\n\tsnippets,\n\tsetSnippets,\n\ttokensUsed,\n\tsetTokensUsed,\n}) => {\n\tconst [delilahWorking, setDelilahWorking] = useState(false)\n\n\tuseEffect(() => {\n\t\tsetFormData({\n\t\t\t...formData,\n\t\t\tthread_id: selectedThread,\n\t\t})\n\t}, [selectedThread])\n\n\t// Prompt Form\n\tconst choiceTypes = [\"prompt\", \"subject\", \"demographics\"]\n\n\tconst [formData, setFormData] = useState({\n\t\tprompt_type: \"brainstorm\",\n\t\tprompt_choices: [\n\t\t\t{ choice_type: choiceTypes[0], choice: \"\" },\n\t\t\t{ choice_type: choiceTypes[1], choice: \"\" },\n\t\t\t{ choice_type: choiceTypes[2], choice: \"\" },\n\t\t],\n\t\tthread_id: selectedThread,\n\t})\n\n\tconst handleChangeForm = (event, index) => {\n\t\tconst { name, value } = event.target\n\t\tconst newPromptChoices = [...formData.prompt_choices]\n\n\t\tif (event.target.name === \"prompt_type\")\n\t\t\tsetFormData({\n\t\t\t\t...formData,\n\t\t\t\t[event.target.name]: event.target.value,\n\t\t\t})\n\t\telse newPromptChoices[index][name] = value\n\t\tsetFormData({\n\t\t\t...formData,\n\t\t\tprompt_type: name === \"prompt_type\" ? value : formData.prompt_type,\n\t\t\tprompt_choices: newPromptChoices,\n\t\t})\n\t}\n\n\tconst sendForm = () => {\n\t\tsetDelilahWorking(true)\n\n\t\tconst parameters = {\n\t\t\tdata: formData,\n\t\t\tmethod: \"POST\",\n\t\t}\n\n\t\tconst generationsRequest = new Request(\"generations/\", parameters)\n\t\tgenerationsRequest\n\t\t\t.then((res) => {\n\t\t\t\tsetTokensUsed(tokensUsed + res.data.tokens_used)\n\n\t\t\t\tsetThreads(\n\t\t\t\t\tthreads.map((thread) => {\n\t\t\t\t\t\tif (thread.id === selectedThread) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...thread,\n\t\t\t\t\t\t\t\tgenerations: [...thread.generations, res.data],\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn thread\n\t\t\t\t\t})\n\t\t\t\t)\n\n\t\t\t\tsetFormData({\n\t\t\t\t\t...formData,\n\t\t\t\t\tprompt_type: \"brainstorm\",\n\t\t\t\t\tprompt_choices: [\n\t\t\t\t\t\t{ choice_type: choiceTypes[0], choice: \"\" },\n\t\t\t\t\t\t{ choice_type: choiceTypes[1], choice: \"\" },\n\t\t\t\t\t],\n\t\t\t\t})\n\t\t\t\tsetDelilahWorking(false)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t\tsetDelilahWorking(false)\n\t\t\t})\n\t}\n\n\t// Update Form / Quicktools\n\tconst [command, setCommand] = useState(\"general\")\n\tconst [showTextField, setShowTextField] = useState(true)\n\tconst [textFieldValue, setTextFieldValue] = useState(\"\")\n\n\tconst handleChange = (e) => {\n\t\tsetCommand(e.target.value)\n\t\tsetShowTextField(e.target.value !== \"\")\n\t}\n\n\tconst sendCommands = (e, valCommand, valTextFieldValue) => {\n\t\te.preventDefault()\n\t\tconsole.log(valCommand, valTextFieldValue)\n\t\tsetDelilahWorking(true)\n\n\t\tconst parameters = {\n\t\t\tdata: {\n\t\t\t\tcommand: valCommand,\n\t\t\t\ttext_field_value: valTextFieldValue,\n\t\t\t\tthread_id: selectedThread,\n\t\t\t},\n\t\t\tmethod: \"POST\",\n\t\t}\n\n\t\tconst commandsRequest = new Request(\"generations/\", parameters)\n\t\tcommandsRequest\n\t\t\t.then((res) => {\n\t\t\t\tsetTokensUsed(tokensUsed + res.data.tokens_used)\n\n\t\t\t\tsetThreads(\n\t\t\t\t\tthreads.map((thread) => {\n\t\t\t\t\t\tif (thread.id === selectedThread) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...thread,\n\t\t\t\t\t\t\t\tgenerations: [...thread.generations, res.data],\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn thread\n\t\t\t\t\t})\n\t\t\t\t)\n\n\t\t\t\tsetCommand(\"general\")\n\t\t\t\tsetTextFieldValue(\"\")\n\t\t\t\tsetDelilahWorking(false)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t\tsetDelilahWorking(false)\n\t\t\t})\n\t}\n\n\t// delete the most recent generation from the thread\n\tconst deleteGeneration = (e) => {\n\t\tsetDelilahWorking(true)\n\n\t\tconst commandsRequest = new Request(\n\t\t\t\"threads/\" + selectedThread + \"/delete_last_generation/\",\n\t\t\t{\n\t\t\t\tmethod: \"POST\",\n\t\t\t}\n\t\t)\n\n\t\tcommandsRequest\n\t\t\t.then((response) => {\n\t\t\t\tsetThreads(\n\t\t\t\t\tthreads.map((thread) => {\n\t\t\t\t\t\tif (thread.id === selectedThread) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...thread,\n\t\t\t\t\t\t\t\tgenerations: thread.generations.slice(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tthread.generations.length - 1\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn thread\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\tsetDelilahWorking(false)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t\tsetDelilahWorking(false)\n\t\t\t})\n\t}\n\n\t// regenerate the last geneartion\n\tconst regenerateGeneration = (e) => {\n\t\tsetDelilahWorking(true)\n\t\tconst commandsRequest = new Request(\n\t\t\t\"threads/\" + selectedThread + \"/regenerate/\",\n\t\t\t{\n\t\t\t\tmethod: \"POST\",\n\t\t\t}\n\t\t)\n\n\t\tcommandsRequest\n\t\t\t.then((response) => {\n\t\t\t\tsetThreads(\n\t\t\t\t\tthreads.map((thread) => {\n\t\t\t\t\t\tif (thread.id === selectedThread) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...thread,\n\t\t\t\t\t\t\t\tgenerations: [\n\t\t\t\t\t\t\t\t\t...thread.generations.slice(\n\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\tthread.generations.length - 1\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tresponse.data,\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn thread\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\tsetDelilahWorking(false)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t\tsetDelilahWorking(false)\n\t\t\t})\n\t}\n\n\treturn (\n\t\t<div className=\"flex flex-col bg-slate-100 hw-screen w-4/6\">\n\t\t\t<div className=\"overflow-y-scroll overflow-x-hidden h-screen bg-slate-100\">\n\t\t\t\t{threads.find((thread) => thread.id === selectedThread)\n\t\t\t\t\t.generations.length === 0 ? (\n\t\t\t\t\t<div className=\"flex flex-col items-center justify-center h-full\">\n\t\t\t\t\t\t<div className=\"w-full md:max-w-2xl lg:max-w-3xl md:h-full md:flex md:flex-col px-6 dark:text-gray-100\">\n\t\t\t\t\t\t\t<h1 className=\"text-4xl font-semibold text-center mt-6 sm:mt-[20vh] ml-auto mr-auto mb-10 sm:mb-16 flex gap-2 items-center justify-center\">\n\t\t\t\t\t\t\t\tDelilah\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div className=\"md:flex items-start text-center gap-3.5\">\n\t\t\t\t\t\t\t\t<EmptyThreadInfoBox\n\t\t\t\t\t\t\t\t\ticon={ChatBubbles}\n\t\t\t\t\t\t\t\t\ttitle=\"Examples\"\n\t\t\t\t\t\t\t\t\ttext1=\"Someone who grew up in mom's restaurant.\"\n\t\t\t\t\t\t\t\t\ttext2=\"Someone who grew up in a rural town in the middle of nowhere.\"\n\t\t\t\t\t\t\t\t\ttext3=\"Someone who grew up in a crime-ridden city.\"\n\t\t\t\t\t\t\t\t\tclickable={true}\n\t\t\t\t\t\t\t\t></EmptyThreadInfoBox>\n\t\t\t\t\t\t\t\t<EmptyThreadInfoBox\n\t\t\t\t\t\t\t\t\ticon={LightningBolt}\n\t\t\t\t\t\t\t\t\ttitle=\"Capabilities\"\n\t\t\t\t\t\t\t\t\ttext1=\"Optimized for crafting personal anecdotes showing the user's personality\"\n\t\t\t\t\t\t\t\t\ttext2=\"Allows user to provide follow-up correction\"\n\t\t\t\t\t\t\t\t\ttext3=\"Remembers what the user said earlier in the conversation.\"\n\t\t\t\t\t\t\t\t\tclickable={false}\n\t\t\t\t\t\t\t\t></EmptyThreadInfoBox>\n\t\t\t\t\t\t\t\t<EmptyThreadInfoBox\n\t\t\t\t\t\t\t\t\ticon={Warning}\n\t\t\t\t\t\t\t\t\ttitle=\"Limitations\"\n\t\t\t\t\t\t\t\t\ttext1=\"Requires you to input specific and personal experiences\"\n\t\t\t\t\t\t\t\t\ttext2=\"Limited knowledge of the world and events after 2021\"\n\t\t\t\t\t\t\t\t\ttext3=\"May occasionally produce harmful instructions or biased content\"\n\t\t\t\t\t\t\t\t\tclickable={false}\n\t\t\t\t\t\t\t\t></EmptyThreadInfoBox>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tref={(el) => {\n\t\t\t\t\t\t\t\t\tif (el) {\n\t\t\t\t\t\t\t\t\t\tel.scrollIntoView(false)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{threads\n\t\t\t\t\t\t\t.find((thread) => thread.id === selectedThread)\n\t\t\t\t\t\t\t.generations.map((generation, index, arr) => {\n\t\t\t\t\t\t\t\tconst isLast = index === arr.length - 1\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\ttext={generation.prompt.user_string}\n\t\t\t\t\t\t\t\t\t\t\tauthor=\"You\"\n\t\t\t\t\t\t\t\t\t\t\tsendCommands={sendCommands}\n\t\t\t\t\t\t\t\t\t\t\tdelilahWorking={delilahWorking}\n\t\t\t\t\t\t\t\t\t\t\tsetDelilahWorking={\n\t\t\t\t\t\t\t\t\t\t\t\tsetDelilahWorking\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tsnippets={snippets}\n\t\t\t\t\t\t\t\t\t\t\tsetSnippets={setSnippets}\n\t\t\t\t\t\t\t\t\t\t\tisLast={isLast}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\t\t\t\t\tkey={index + 1}\n\t\t\t\t\t\t\t\t\t\t\ttext={generation.text}\n\t\t\t\t\t\t\t\t\t\t\tauthor=\"Delilah\"\n\t\t\t\t\t\t\t\t\t\t\tsendCommands={sendCommands}\n\t\t\t\t\t\t\t\t\t\t\tdelilahWorking={delilahWorking}\n\t\t\t\t\t\t\t\t\t\t\tsetDelilahWorking={\n\t\t\t\t\t\t\t\t\t\t\t\tsetDelilahWorking\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tsnippets={snippets}\n\t\t\t\t\t\t\t\t\t\t\tsetSnippets={setSnippets}\n\t\t\t\t\t\t\t\t\t\t\tisLast={isLast}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tref={(el) => {\n\t\t\t\t\t\t\t\tif (el) {\n\t\t\t\t\t\t\t\t\tel.scrollIntoView(false)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\n\t\t\t<CenterForm\n\t\t\t\tthreads={threads}\n\t\t\t\tselectedThread={selectedThread}\n\t\t\t\tformData={formData}\n\t\t\t\thandleChangeForm={handleChangeForm}\n\t\t\t\tcommand={command}\n\t\t\t\tsendForm={sendForm}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\tshowTextField={showTextField}\n\t\t\t\ttextFieldValue={textFieldValue}\n\t\t\t\tsetTextFieldValue={setTextFieldValue}\n\t\t\t\tsendCommands={sendCommands}\n\t\t\t\tdeleteGeneration={deleteGeneration}\n\t\t\t\tregenerateGeneration={regenerateGeneration}\n\t\t\t\tdelilahWorking={delilahWorking}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default Center\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}